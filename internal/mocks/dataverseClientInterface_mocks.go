// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/microsoft/terraform-provider-power-platform/internal/powerplatform (interfaces: DataverseClientInterface)

// Package powerplatform_mocks is a generated GoMock package.
package powerplatform_mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	powerplatform_bapi "github.com/microsoft/terraform-provider-power-platform/internal/powerplatform/bapi/models"
)

// MockDataverseClientInterface is a mock of DataverseClientInterface interface.
type MockDataverseClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDataverseClientInterfaceMockRecorder
}

// MockDataverseClientInterfaceMockRecorder is the mock recorder for MockDataverseClientInterface.
type MockDataverseClientInterfaceMockRecorder struct {
	mock *MockDataverseClientInterface
}

// NewMockDataverseClientInterface creates a new mock instance.
func NewMockDataverseClientInterface(ctrl *gomock.Controller) *MockDataverseClientInterface {
	mock := &MockDataverseClientInterface{ctrl: ctrl}
	mock.recorder = &MockDataverseClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataverseClientInterface) EXPECT() *MockDataverseClientInterfaceMockRecorder {
	return m.recorder
}

// GetSolutions mocks base method.
func (m *MockDataverseClientInterface) GetSolutions(arg0 context.Context, arg1 string) ([]powerplatform_bapi.SolutionDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSolutions", arg0, arg1)
	ret0, _ := ret[0].([]powerplatform_bapi.SolutionDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSolutions indicates an expected call of GetSolutions.
func (mr *MockDataverseClientInterfaceMockRecorder) GetSolutions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSolutions", reflect.TypeOf((*MockDataverseClientInterface)(nil).GetSolutions), arg0, arg1)
}

// Initialize mocks base method.
func (m *MockDataverseClientInterface) Initialize(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Initialize", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Initialize indicates an expected call of Initialize.
func (mr *MockDataverseClientInterfaceMockRecorder) Initialize(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Initialize", reflect.TypeOf((*MockDataverseClientInterface)(nil).Initialize), arg0, arg1)
}
