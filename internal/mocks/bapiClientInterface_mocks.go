// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/microsoft/terraform-provider-power-platform/internal/powerplatform (interfaces: BapiClientInterface)

// Package powerplatform_mocks is a generated GoMock package.
package powerplatform_mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	powerplatform "github.com/microsoft/terraform-provider-power-platform/internal/powerplatform"
	powerplatform_bapi "github.com/microsoft/terraform-provider-power-platform/internal/powerplatform/bapi/models"
)

// MockBapiClientInterface is a mock of BapiClientInterface interface.
type MockBapiClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBapiClientInterfaceMockRecorder
}

// MockBapiClientInterfaceMockRecorder is the mock recorder for MockBapiClientInterface.
type MockBapiClientInterfaceMockRecorder struct {
	mock *MockBapiClientInterface
}

// NewMockBapiClientInterface creates a new mock instance.
func NewMockBapiClientInterface(ctrl *gomock.Controller) *MockBapiClientInterface {
	mock := &MockBapiClientInterface{ctrl: ctrl}
	mock.recorder = &MockBapiClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBapiClientInterface) EXPECT() *MockBapiClientInterfaceMockRecorder {
	return m.recorder
}

// CreateEnvironment mocks base method.
func (m *MockBapiClientInterface) CreateEnvironment(arg0 context.Context, arg1 powerplatform_bapi.EnvironmentCreateDto) (*powerplatform_bapi.EnvironmentDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEnvironment", arg0, arg1)
	ret0, _ := ret[0].(*powerplatform_bapi.EnvironmentDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEnvironment indicates an expected call of CreateEnvironment.
func (mr *MockBapiClientInterfaceMockRecorder) CreateEnvironment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEnvironment", reflect.TypeOf((*MockBapiClientInterface)(nil).CreateEnvironment), arg0, arg1)
}

// DeleteEnvironment mocks base method.
func (m *MockBapiClientInterface) DeleteEnvironment(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEnvironment", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEnvironment indicates an expected call of DeleteEnvironment.
func (mr *MockBapiClientInterfaceMockRecorder) DeleteEnvironment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEnvironment", reflect.TypeOf((*MockBapiClientInterface)(nil).DeleteEnvironment), arg0, arg1)
}

// GetBase mocks base method.
func (m *MockBapiClientInterface) GetBase() powerplatform.ApiClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBase")
	ret0, _ := ret[0].(powerplatform.ApiClientInterface)
	return ret0
}

// GetBase indicates an expected call of GetBase.
func (mr *MockBapiClientInterfaceMockRecorder) GetBase() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBase", reflect.TypeOf((*MockBapiClientInterface)(nil).GetBase))
}

// GetEnvironment mocks base method.
func (m *MockBapiClientInterface) GetEnvironment(arg0 context.Context, arg1 string) (*powerplatform_bapi.EnvironmentDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvironment", arg0, arg1)
	ret0, _ := ret[0].(*powerplatform_bapi.EnvironmentDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEnvironment indicates an expected call of GetEnvironment.
func (mr *MockBapiClientInterfaceMockRecorder) GetEnvironment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvironment", reflect.TypeOf((*MockBapiClientInterface)(nil).GetEnvironment), arg0, arg1)
}

// GetEnvironments mocks base method.
func (m *MockBapiClientInterface) GetEnvironments(arg0 context.Context) ([]powerplatform_bapi.EnvironmentDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvironments", arg0)
	ret0, _ := ret[0].([]powerplatform_bapi.EnvironmentDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEnvironments indicates an expected call of GetEnvironments.
func (mr *MockBapiClientInterfaceMockRecorder) GetEnvironments(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvironments", reflect.TypeOf((*MockBapiClientInterface)(nil).GetEnvironments), arg0)
}

// UpdateEnvironment mocks base method.
func (m *MockBapiClientInterface) UpdateEnvironment(arg0 context.Context, arg1 string, arg2 powerplatform_bapi.EnvironmentDto) (*powerplatform_bapi.EnvironmentDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEnvironment", arg0, arg1, arg2)
	ret0, _ := ret[0].(*powerplatform_bapi.EnvironmentDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateEnvironment indicates an expected call of UpdateEnvironment.
func (mr *MockBapiClientInterfaceMockRecorder) UpdateEnvironment(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEnvironment", reflect.TypeOf((*MockBapiClientInterface)(nil).UpdateEnvironment), arg0, arg1, arg2)
}
