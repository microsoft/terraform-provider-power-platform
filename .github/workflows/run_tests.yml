name: Terraform Provider E2E Test

on:
 workflow_dispatch:
 pull_request:
    paths-ignore:
      - 'README.md'
 push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
 

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  # ensure go.mod and go.sum are updated
  depscheck:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:

    - name: Harden Runner
      uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
      with:
        egress-policy: audit

    - name: Check out code into the Go module directory
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        cache: true
        go-version-file: 'go.mod'
      id: go


    - name: Run 'go mod tidy' and check for differences
      run: |
        go mod tidy
        git diff --exit-code -- go.mod go.sum || \
        (echo; echo "Unexpected difference in go.mod/go.sum files. Run 'go mod tidy' command or revert any go.mod/go.sum changes and commit."; exit 1)

  # ensure the code builds
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Harden Runner
      uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
      with:
        egress-policy: audit

    - name: Check out code into the Go module directory
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        cache: true
        go-version-file: 'go.mod'
      id: go

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  # unit_test:
  #   name: Unit Test
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
    
  #   - name: Harden Runner
  #     uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
  #     with:
  #       egress-policy: audit

  #   - name: Check out code into the Go module directory
  #     uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

  #   - name: Set up Go
  #     uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
  #     with:
  #       cache: true
  #       go-version-file: 'go.mod'
  #       id: go

  #   - name: Run unit tests
  #     run: |
  #       go clean -testcache
  #       go test -p 4 -failfast -v ./... -run "^TestUnit" -coverprofile=unit-test-coverage.out
  #       go tool cover -html=unit-test-coverage.out -o unit-test-coverage.cov.html

  #   - name: Upload Coverage Artifacts
  #     uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
  #     with:
  #       name: Unit Test Coverage
  #       path: unit-test-coverage.cov.html

  acceptance_test:
    name: Acceptance Test
    needs: build
    runs-on: ubuntu-latest
    steps:
    
    - name: Harden Runner
      uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
      with:
        egress-policy: audit

    - name: Check out code into the Go module directory
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        cache: true
        go-version-file: 'go.mod'
        id: go

    - name: Get dependencies
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.49.0
        go mod download
    
    - name: "Set up Terraform"
      uses: hashicorp/setup-terraform@v3

    - name: Download Terraform Providers
      run: |
          mkdir deps
          cp .devcontainer/features/acceptance_test_dependencies/main.tf deps/main.tf
          cd deps
          terraform init
          find .terraform/providers/ -type f -exec cp {} . \;
          
    - name: Setting up local provider install
      run: |
          cp .devcontainer/features/local_provider_dev/terraform.rc deps/terraform.rc
          cd deps
          sed -i "s|/go/bin|${GITHUB_WORKSPACE}/deps|g" terraform.rc
          cat terraform.rc
          
    
    - name: Run acceptance tests
      run: |
        export TF_CLI_CONFIG_FILE="${GITHUB_WORKSPACE}/deps/terraform.rc"
        export TF_LOG=ERROR
        export TF_ACC=1
        export POWER_PLATFORM_USE_OIDC=true
        export POWER_PLATFORM_TENANT_ID='${{ secrets.ACCEPTANCE_TESTS_ENV_TENANT_ID }}'
        export POWER_PLATFORM_CLIENT_ID='${{ secrets.ACCEPTANCE_TESTS_ENV_CLIENT_ID }}'
        export ARM_USE_OIDC="true"
        export ARM_CLIENT_ID='${{ secrets.ACCEPTANCE_TESTS_ENV_CLIENT_ID }}'
        export ARM_TENANT_ID='${{ secrets.ACCEPTANCE_TESTS_ENV_TENANT_ID }}'
        export ARM_SUBSCRIPTION_ID='${{ secrets.ACCEPTANCE_TESTS_ENV_SUBSCRIPTION_ID }}'
        go clean -testcache
        go test -p 12 -failfast -v ./... -run ^TestAccConnectionsShareDataSource_Validate_Read$ -coverprofile=acc-test-coverage.out -timeout 300m
        go tool cover -html=acc-test-coverage.out -o acc-test-coverage.cov.html

    - name: Upload Coverage Artifacts
      uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
      with:
        name: Acceptance Test Coverage
        path: acc-test-coverage.cov.html
