name: Terraform Provider Tests

on:
  workflow_dispatch:
  schedule:
     # run at 4 AM UTC every day
     - cron:  '0 4 * * *' 
  pull_request:
  push:
     branches:
       - main

concurrency:
  group: acceptancetests
  cancel-in-progress: false

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  should_run:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-acceptance-tests'))
    outputs:
      acceptance_tests: ${{ steps.set_acceptance_tests.outputs.acceptance_tests }}
    steps:
      - id: set_acceptance_tests
        name: Only run acceptance tests if necessary
        run: echo "acceptance_tests=true" >> $GITHUB_OUTPUT
  # ensure go.mod and go.sum are updated
  depscheck:
    name: Check Dependencies
    runs-on: ubuntu-latest
    needs: should_run
    if: ${{ needs.should_run.outputs.acceptance_tests == 'true' }}
    steps:

    - name: Harden Runner
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: audit

    - name: Check out code into the Go module directory
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        cache: true
        go-version-file: 'go.mod'
      id: go


    - name: Run 'go mod tidy' and check for differences
      run: |
        go mod tidy
        git diff --exit-code -- go.mod go.sum || \
        (echo; echo "Unexpected difference in go.mod/go.sum files. Run 'go mod tidy' command or revert any go.mod/go.sum changes and commit."; exit 1)

  # ensure the code builds
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: should_run
    if: ${{ needs.should_run.outputs.acceptance_tests == 'true' }}
    timeout-minutes: 5
    steps:

    - name: Harden Runner
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: audit

    - name: Check out code into the Go module directory
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        cache: true
        go-version-file: 'go.mod'
      id: go

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  tests:
    name: Running Test
    needs: [build, should_run]
    if: ${{ needs.should_run.outputs.acceptance_tests == 'true' }}
    runs-on: ubuntu-latest
    steps:
    
    - name: Harden Runner
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: audit

    - name: Check out code into the Go module directory
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        cache: true
        go-version-file: 'go.mod'
      id: go

    - name: Get dependencies
      run: |
        go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.0.1
        go install github.com/jstemmer/go-junit-report/v2@v2.1.0
        go mod download
    
    - name: "Set up Terraform"
      uses: hashicorp/setup-terraform@v3  
    
    - name: Install Power Platform Tools
      if: success() || failure()
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Environments cleanup
      if: success() || failure()
      shell: pwsh
      run: |
        dotnet tool install --global Microsoft.PowerApps.CLI.Tool
        pac auth create --githubFederated --tenant ${{ secrets.ACCEPTANCE_TESTS_ENV_TENANT_ID }} --applicationId ${{ secrets.ACCEPTANCE_TESTS_ENV_CLIENT_ID }}
        $environmentsList = (pac admin list --name "Test" --json | ConvertFrom-Json)
        $environmentsList | ForEach-Object -Parallel {
            if ($_.DisplayName.StartsWith("Test")){
                Write-Output $_.DisplayName
                pac admin delete -env $_.EnvironmentID
            }
        } -ThrottleLimit 15

    - name: Run tests
      env: 
        TF_LOG: WARN
        TF_ACC: 1
        POWER_PLATFORM_USE_OIDC: true
        POWER_PLATFORM_TENANT_ID: ${{ secrets.ACCEPTANCE_TESTS_ENV_TENANT_ID }}
        POWER_PLATFORM_CLIENT_ID: ${{ secrets.ACCEPTANCE_TESTS_ENV_CLIENT_ID }}
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ secrets.ACCEPTANCE_TESTS_ENV_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.ACCEPTANCE_TESTS_ENV_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ACCEPTANCE_TESTS_ENV_SUBSCRIPTION_ID }}
      run: |
        go clean -testcache
        go test -p 3 -v 2>&1 ./... -run ^Test -coverprofile=test-coverage.out -timeout 300m | go-junit-report -set-exit-code -iocopy -out junit.xml
        
    - name: Prepare coverage report
      if: success() || failure()
      run: |
        go tool cover -html=test-coverage.out -o test-coverage.cov.html

    - name: Upload Coverage Artifacts
      if: success() || failure()
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: Test Coverage
        path: test-coverage.cov.html

    - name: Upload coverage results to Codecov
      if: success() || failure()
      uses: codecov/codecov-action@v5
      with:
        file: test-coverage.out
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        files: junit.xml
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Render test results
      if: always()
      uses: dorny/test-reporter@v2
      with:
        name: Test Results
        path: junit.xml
        reporter: java-junit
        use-actions-summary: true
