name: Release Preparation

on:
  workflow_dispatch:            # manual trigger only

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write               # create commits/refs
      pull-requests: write

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with: { fetch-depth: 0 }

    - name: Install jq & Changie
      run: |
        sudo apt-get -qq update && sudo apt-get -qq install jq
        go install github.com/miniscruff/changie@latest

    # Run Changie; decide next SemVer
    - name: Generate changelog
      id: ver
      run: |
        set -euo pipefail
        changie batch auto
        changie merge
        if git diff --quiet CHANGELOG.md; then
          echo "No changelog entries found" >&2
          exit 1
        fi
        echo "next=$(changie latest)" >> "$GITHUB_OUTPUT"

    # Create release-prep branch from main
    - name: Create branch via gh api
      env:
        GH_TOKEN: ${{ github.token }}
        REPO:     ${{ github.repository }}
        VER:      ${{ steps.ver.outputs.next }}
      run: |
        set -euo pipefail
        MAIN_SHA=$(git rev-parse HEAD)
        BRANCH="release-prep/$VER"
        gh api -X POST "/repos/$REPO/git/refs" \
          -f ref="refs/heads/$BRANCH" \
          -f sha="$MAIN_SHA"

    # Build ONE Verified commit (blob ➜ tree ➜ commit)
    - name: Commit changelog via gh api
      env:
        GH_TOKEN: ${{ github.token }}
        REPO:     ${{ github.repository }}
        VER:      ${{ steps.ver.outputs.next }}
      run: |
        set -euo pipefail
        MSG="chore(release): prep v$VER"
        BASE_SHA=$(git rev-parse HEAD)
        BRANCH="release-prep/$VER"

        mapfile -t FILES < <(git ls-files -m)
        TREE_ITEMS='[]'
        for F in "${FILES[@]}"; do
          BLOB_SHA=$(gh api -X POST "/repos/$REPO/git/blobs" \
                      -f content="$(base64 -w0 <"$F")" \
                      -f encoding=base64 --jq '.sha')
          TREE_ITEMS=$(jq --arg p "$F" --arg s "$BLOB_SHA" \
                          '. += [{"path":$p,"mode":"100644","type":"blob","sha":$s}]' \
                          <<<"$TREE_ITEMS")
        done

        TREE_SHA=$(jq -n --arg base "$BASE_SHA" --argjson items "$TREE_ITEMS" \
                      '{base_tree:$base, tree:$items}' \
          | gh api -X POST "/repos/$REPO/git/trees" --input - --jq '.sha')

        COMMIT_SHA=$(jq -n \
          --arg msg "$MSG" --arg tree "$TREE_SHA" --arg base "$BASE_SHA" \
          '{message:$msg, tree:$tree, parents:[$base]}' \
          | gh api -X POST "/repos/$REPO/git/commits" --input - --jq '.sha')

        gh api -X PATCH "/repos/$REPO/git/refs/heads/$BRANCH" \
          -f sha="$COMMIT_SHA" -F force=false

    - name: Open pull request
      env: 
        GH_TOKEN: ${{ github.token }}
      run: |
        gh pr create \
          --base main \
          --head "release-prep/${{ steps.ver.outputs.next }}" \
          --title "Release prep v${{ steps.ver.outputs.next }}" \
          --body  "Automated Changie merge for v${{ steps.ver.outputs.next }}"
